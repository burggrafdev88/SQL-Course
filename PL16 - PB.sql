/*
Philip Burggraf
PL-16
*/

--1.
CREATE OR REPLACE FUNCTION GET_BALANCE_DUE
(
INVOICE_ID_PARAM VARCHAR2
)
RETURN NUMBER
AS
BALANCE_DUE_VAR NUMBER;
BEGIN
SELECT INVOICE_TOTAL - PAYMENT_TOTAL - CREDIT_TOTAL
INTO BALANCE_DUE_VAR
FROM AP.INVOICES
WHERE INVOICE_ID = INVOICE_ID_PARAM;

RETURN BALANCE_DUE_VAR;
END;
/

--2.
SET SERVEROUTPUT ON;
/

SELECT INVOICE_ID, TO_CHAR(GET_BALANCE_DUE(INVOICE_ID),'$99,999.99') AS BALANCE_DUE
FROM AP.INVOICES;


--3.
CREATE OR REPLACE PROCEDURE UPDATE_EMPLOYEE
(
EMPLOYEE_ID_PARAM NUMBER,
SALARY_PARAM NUMBER
)
AS
BEGIN
IF SALARY_PARAM < 0 THEN
RAISE_APPLICATION_ERROR(-20222, 'Salary must be positive!');
END IF;

UPDATE EMPLOYEES_COPY_MAY
SET SALARY = SALARY_PARAM
WHERE EMPLOYEE_ID = EMPLOYEE_ID_PARAM;

COMMIT;
END;
/

--4.
BEGIN
UPDATE_EMPLOYEE(100,10);
END;
/

BEGIN
UPDATE_EMPLOYEE(100, -10);
END;







