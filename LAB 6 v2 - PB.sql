/*
LAB 6
PHILIP BURGGRAF
*/

--1.
SELECT TO_CHAR(AVG(COURSE_FEE), '$999,999.99') AS "Average Cost Per Course"
FROM STUDENT.COURSE_REVENUE;

--2.
SELECT STUDENT_ID, STATE
FROM STUDENT.STUDENT JOIN STUDENT.ZIPCODE
    ON STUDENT.ZIP = ZIPCODE.ZIP
ORDER BY STUDENT_ID
FETCH FIRST 10 ROWS ONLY;

--3.
SELECT STUDENT_ID, STATE
FROM STUDENT.STUDENT, STUDENT.ZIPCODE
WHERE STUDENT.ZIP = ZIPCODE.ZIP
ORDER BY STUDENT_ID
FETCH FIRST 10 ROWS ONLY;

--4.
SELECT STUDENT_ID, CITY || ', ' || STATE
FROM STUDENT.STUDENT JOIN STUDENT.ZIPCODE
    ON STUDENT.ZIP = ZIPCODE.ZIP
ORDER BY STUDENT_ID
FETCH FIRST 10 ROWS ONLY;

--5. 
SELECT COURSE.DESCRIPTION, TO_CHAR(REVENUE, '$999,999.99') AS "TOTAL REVENUE", TO_CHAR(REVENUE / STUDENT.COURSE_REVENUE.NUM_OF_SECTIONS, '$999,999.99') AS "REVENUE PER SECTION TAUGHT"
FROM STUDENT.COURSE JOIN STUDENT.COURSE_REVENUE
ON COURSE.COURSE_NO = COURSE_REVENUE.COURSE_NO
ORDER BY "REVENUE PER SECTION TAUGHT" DESC;

--6.
SELECT INSTRUCTOR.INSTRUCTOR_ID, FIRST_NAME, LAST_NAME, STUDENT.INSTRUCTOR_SUMMARY.NUM_OF_CLASSES, NUM_OF_STUDENTS
FROM STUDENT.INSTRUCTOR JOIN STUDENT.INSTRUCTOR_SUMMARY
    ON STUDENT.INSTRUCTOR.INSTRUCTOR_ID = STUDENT.INSTRUCTOR_SUMMARY.INSTRUCTOR_ID
WHERE NUM_OF_CLASSES > 0
ORDER BY STUDENT.INSTRUCTOR_SUMMARY.NUM_OF_CLASSES DESC, STUDENT.INSTRUCTOR_SUMMARY.NUM_OF_STUDENTS DESC;

--7.
SELECT GRADE.GRADE_TYPE_CODE, DESCRIPTION, TO_CHAR(AVG(GRADE.NUMERIC_GRADE), '99.99') AS "AVERAGE_GRADE"
FROM STUDENT.GRADE JOIN STUDENT.GRADE_TYPE
    ON STUDENT.GRADE.GRADE_TYPE_CODE = STUDENT.GRADE_TYPE.GRADE_TYPE_CODE
GROUP BY GRADE.GRADE_TYPE_CODE, DESCRIPTION;

--8. 
SELECT INSTRUCTOR.INSTRUCTOR_ID, LAST_NAME, TO_CHAR(REVENUE / NUM_OF_STUDENTS, '$999,999.99') AS "REVENUE PER STUDENT"
FROM STUDENT.INSTRUCTOR JOIN STUDENT.INSTRUCTOR_SUMMARY
    ON INSTRUCTOR.INSTRUCTOR_ID = INSTRUCTOR_SUMMARY.INSTRUCTOR_ID
WHERE NUM_OF_STUDENTS > 0
ORDER BY "REVENUE PER STUDENT" DESC;

--9.
SELECT INVOICE_ID, VENDOR_NAME
FROM AP.INVOICES LEFT JOIN AP.VENDORS
    ON INVOICES.VENDOR_ID = VENDORS.VENDOR_ID
ORDER BY INVOICE_ID
FETCH FIRST 10 ROWS ONLY;

--10.
SELECT VENDOR_NAME
FROM AP.VENDORS
ORDER BY VENDOR_NAME
FETCH FIRST 20 ROWS ONLY;

--11.
SELECT INVOICE_ID, VENDOR_NAME
FROM AP.INVOICES LEFT JOIN AP.VENDORS
    ON INVOICES.VENDOR_ID = VENDORS.VENDOR_ID
WHERE VENDOR_NAME BETWEEN 'H' AND 'M';

--12.
SELECT MIN(PAYMENT_DATE) AS "EARLIEST PAYMENT DATE", MAX(PAYMENT_DATE) AS "LATEST PAYMENT DATE"
FROM AP.INVOICES;

--13.
SELECT INVOICE_NUMBER, REPLACE(INVOICE_NUMBER, '-', '') AS "NO DASHES"
FROM AP.INVOICES
ORDER BY INVOICE_NUMBER
FETCH FIRST 20 ROWS ONLY;

--14.
SELECT VENDOR_NAME
FROM AP.VENDORS
WHERE ((VENDOR_NAME LIKE '%Inc') OR (VENDOR_NAME LIKE '%Inc.')) AND (VENDOR_NAME NOT LIKE 'Inc%');

--15.
SELECT VENDOR_NAME, REPLACE(VENDOR_ADDRESS1, 'NULL', '') || ' ' || VENDOR_CITY || ', ' || VENDOR_STATE || ' ' || VENDOR_ZIP_CODE AS "COMPLETE ADDRESS"
FROM AP.VENDORS
WHERE VENDOR_NAME LIKE 'P%';




